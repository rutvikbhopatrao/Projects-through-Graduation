import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
data=pd.read_csv(r'athlete.csv')
data['Medal'].fillna('No Medal', inplace=True)
data.loc[:,['NOC','Team']].drop_duplicates()['NOC'].value_counts()
data_summer=data[data['Season']=='Summer']
data_usa=data_summer[data_summer['NOC']=='USA']
data_usa['Age'].fillna((data_usa['Age'].mean()), inplace=True)
data_usa['Height'].fillna((data_usa['Height'].mean()), inplace=True)
data_usa['Weight'].fillna((data_usa['Weight'].mean()), inplace=True)
print(data_usa.isnull().sum())
data_usa1=data_usa.drop(['Team','NOC','Games','Season'],axis=1)
y_sim = []
for i in y:
    if i == 'No Medal':
        y_sim.append(i)
    else:
        y_sim.append('Medal')

import sklearn
from sklearn.preprocessing import LabelEncoder
labelencoder=LabelEncoder()
y_sim = labelencoder.fit_transform(y_sim)
for feature in X.columns:
    X[feature] = labelencoder.fit_transform(X[feature])

import imblearn
from collections import Counter
from sklearn.datasets import make_classification
from imblearn.over_sampling import SMOTE

print('Original dataset shape {}'.format(Counter(y_sim)))
sm = SMOTE(random_state=42)
X_res, y_sim_res = sm.fit_sample(X, y_sim)
print('Resampled dataset shape {}'.format(Counter(y_sim_res)))

from sklearn.cross_validation import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y_sim,test_size=0.2,random_state=0)

from sklearn.preprocessing import StandardScaler
sc_X=StandardScaler()
X_train=sc_X.fit_transform(X_train)
X_test=sc_X.transform(X_test)
from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression(random_state=0)
classifier.fit(X_train,y_train)

y_pred=classifier.predict(X_test)

from sklearn.metrics import confusion_matrix, classification_report
cm=confusion_matrix(y_test, y_pred)
cm

array([[ 189,  812],
       [ 172, 1840]], dtype=int64)

print(classification_report(y_test, y_pred))
